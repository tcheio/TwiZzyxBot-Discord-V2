const { EmbedBuilder, PermissionsBitField } = require('discord.js');
const config = require('../../../config');

const msg="- <:Twitch:748225816973803562>**NOUVELLES ANNONCES DE STREAM** qui s'adapte automatiquement √† ce qu'on fait (*√áa d√©pend du scenario et bon vous les avez d√©j√† vu depuis un moment*) \n"+ 
          "- **Ajout des permissions pour les commandes**, vous ne pouvez utiliser qu'une partie des commandes et le staffs peuvent toutes les utilis√©s\n"+
          "- **Ajout de la premi√®re commande pour vous:** `/planning` qui comme son nom l'indique vous affiche le planning de la semaine en cours. J'en profiterai √©galement pour mettre √† jour le planning photo d√©s que je suis au courant donc en cas de changement de programme vous pourrez le voir de mani√®re visible sur une image planning"+
          "- **Ajout de la commande** `/clear` **pour __le staff__** qui permet de clear un certains nombre de messages et m√™me choisir les utilisateurs\n"+
          "- **Ajout de la commande** `/planningreset` **pour __le staff__** qui permet de reset le planning en fin de semaine (*Commande provisoire le temps d'automatiser le proces*)\n\n"+
          
          "Outre √ßa, il y a √©galement eu **une optimisation de certaines parcels de code**, **une optimisation √©galement de la gestions des annonces** qui est d√©sormais g√©rer sur un serveur externe, pleins **d'ajouts de gif pour les annonces de streams** que vous avez commencer √† voir et que je mettrais √† jour r√©guli√®rement.\n\n"+
          "**L'h√©bergeur a √©galement √©t√© am√©liorer en esp√©rant moins de crash innopin√©** (*Je croise les doigts*).\n\n"+
          
          "**J'esp√®re que toutes ses nouveaut√©s vont vous plaires**, si vous voyez un **bug** et une **suggestion** pour le bot, n'h√©sitez pas √† le faire dans le <#1060679452146802769>";

class command {
    constructor() {
        this.name = "changelog",
        this.description = "Afficher les mises √† jour (STAFF)",
        this.permission = "Administrator"

    }

    
    async execute(bot, interaction) {
        if (interaction.member.permissions.has(PermissionsBitField.Flags.ManageMessages)) {
        var now = new Date();
        skipVideo = false;
        const SKIP = new EmbedBuilder()
        .setColor('#E49B0F')
        .setTitle('‚öô**__Mise √† jour du '+now.getDate()+'/'+(parseInt(now.getUTCMonth())+1)+'/'+now.getFullYear()+'__**')
            .setDescription(msg)
            .setTimestamp()
            .setFooter({ text: config.clients.name, iconURL: config.clients.logo});

        interaction.reply({ embeds: [SKIP] });
        }
        else {
            const Embed = new EmbedBuilder()
            .setColor('Random')
            .setTitle('üëÆ‚Äç‚ôÇÔ∏è **Action de mod√©ration**')
            .setTimestamp()
            .setFooter({ text: config.clients.name, iconURL: config.clients.logo})
            .setDescription("Tu n'as pas la permission d'√©x√©cuter cette commande");
            interaction.reply({ embeds: [Embed] });
    
            }
    }
}

module.exports = command