const { EmbedBuilder, PermissionsBitField } = require('discord.js');
const config = require('../../../config');

const msg="- **Fix des perms commandes** (Le staff peut enfin utiliser les commandes de STAFF\n"+
          "- **Fix des annonces de shorts (Vraiment une petite b√™tises √† tout niquer)\n"+
          "- **Fix des annonces Mardi Zizi (Un caract√®re anti slash √©tait ajouter qui est innexploitable) -> D√©sormais les MZ seront nomme soit `Mardi Z#zi` ou `Mardi Zlzi` et le pire c'est que j'ai fais √ßa pour rien\n\n"+

          'Cette version du bot est donc normalement termin√© √† "100%" (Sauf correctif tr√®s mineur et ajout de nouveau stream type). Je travaille d√©j√† sur la prochaine donc je suis toujours preneur de vos id√©es de commandes que vous souhaitez voir.'

class command {
    constructor() {
        this.name = "changelog",
        this.description = "Afficher les mises √† jour (STAFF)",
        this.permission = "Administrator"

    }

    
    async execute(bot, interaction) {
        if (interaction.member.permissions.has(PermissionsBitField.Flags.Administrators)) {
        var now = new Date();
        skipVideo = false;
        const SKIP = new EmbedBuilder()
        .setColor('#E49B0F')
        .setTitle('‚öô**__Mise √† jour du '+now.getDate()+'/'+(parseInt(now.getUTCMonth())+1)+'/'+now.getFullYear()+'__**')
            .setDescription(msg)
            .setTimestamp()
            .setFooter({ text: config.clients.name, iconURL: config.clients.logo});

        interaction.reply({ embeds: [SKIP] });
        }
        else {
            const Embed = new EmbedBuilder()
            .setColor('Random')
            .setTitle('üëÆ‚Äç‚ôÇÔ∏è **Action de mod√©ration**')
            .setTimestamp()
            .setFooter({ text: config.clients.name, iconURL: config.clients.logo})
            .setDescription("Tu n'as pas la permission d'√©x√©cuter cette commande");
            interaction.reply({ embeds: [Embed] });
    
            }
    }
}

module.exports = command